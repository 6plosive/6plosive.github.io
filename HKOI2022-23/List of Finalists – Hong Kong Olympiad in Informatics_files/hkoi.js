// Generated by CoffeeScript 1.10.0
(function() {
  var Nav, NavView,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Nav = (function(superClass) {
    extend(Nav, superClass);

    function Nav() {
      return Nav.__super__.constructor.apply(this, arguments);
    }

    Nav.prototype.defaults = {
      active: null
    };

    return Nav;

  })(Backbone.Model);

  NavView = (function(superClass) {
    extend(NavView, superClass);

    function NavView() {
      this.deactivate = bind(this.deactivate, this);
      return NavView.__super__.constructor.apply(this, arguments);
    }

    NavView.prototype.initialize = function() {
      this.listenTo(this.model, 'change:active', this.render);
      this.$('#nav-dropdown').click(function(e) {
        return e.stopPropagation();
      });
      $('body').on('click', this.deactivate);
      $('#nav-previous').on('focus', (e) => this.previousTab(e));
      $('#nav-next').on('focus', (e) => this.nextTab(e));

      return $(window).on('resize', (function(_this) {
        return function() {
          if (_this.$('#nav-dropdown').hasClass('raised')) {
            return _this.$('#nav-dropdown').height('auto');
          }
        };
      })(this));
    };

    NavView.prototype.events = {
      'click a': 'activate'
    };

    NavView.prototype.activate = function(e) {
      if (e.currentTarget.id === this.model.get('active')) {
        this.deactivate();
      } else {
        this.model.set('active', e.currentTarget.id);
      }
      return false;
    };

    NavView.prototype.previousTab = function(e) {
      if (!this.model.get('active')) {
        this.model.set('active', $('#nav-menu span:first-child a')[0].id);
        $('#nav-dropdown a:first-child').focus();
        return false;
      }
      const tab = $('#' + this.model.get('active')).parent().prev().children();
      if (tab.length) {
        this.model.set('active', tab[0].id);
        $('#nav-dropdown a:last-child').focus();
      } else {
        this.deactivate();
        jQuery.event.trigger({type: 'keypress', which: 9, shiftKey: true});
        setTimeout(() => $('#nav-dropdown').hide(), 200);
      }
      return false;
    };

    NavView.prototype.nextTab = function(e) {
      if (!this.model.get('active')) {
        this.model.set('active', $('#nav-menu span:last-child a')[0].id);
        $('#nav-dropdown a:first-child').focus();
        return false;
      }
      const tab = $('#' + this.model.get('active')).parent().next().children();
      if (tab.length) {
        this.model.set('active', tab[0].id);
        $('#nav-dropdown a:first-child').focus();
      } else {
        this.deactivate();
        jQuery.event.trigger({type: 'keypress', which: 9});
        setTimeout(() => $('#nav-dropdown').hide(), 200);
      }
      return false;
    };

    NavView.prototype.deactivate = function() {
      return this.model.set('active', null);
    };

    NavView.prototype.render = function() {
      var e, f;
      this.$('#nav-menu a').removeClass('raised');
      if (this.model.get('active')) {
        $('#nav-dropdown').show();
        this.$('#' + this.model.get('active')).addClass('raised');
        e = this.$('.' + this.model.get('active'));
        f = this.$('#nav-dropdown').html(e.html()).addClass('raised');
        return f.height(f.height()).height(e.height());
      } else {
        f = this.$('#nav-dropdown').removeClass('raised');
        return f.height(f.height()).height(0);
      }
    };

    return NavView;

  })(Backbone.View);

  $(function() {
    var nav;
    $('.slider').slider({
      full_width: true,
      indicators: false
    });
    nav = new Nav;
    new NavView({
      el: '#nav',
      model: nav
    });
    /*return $('a').click(function() {
      var h;
      h = this.href;
      if (h.indexOf('assets.hkoi.org') > -1 || h.indexOf('assetshk.hkoi.org') > -1) {
        return ga('send', 'event', 'download', 'download', h);
      }
    });*/
    $.fancybox.defaults.hideScrollbar = false;
    $("a.fbox").fancybox();
  });

}).call(this);
